<!--
  ~ Copyright 2012  Research Studios Austria Forschungsges.m.b.H.
  ~
  ~    Licensed under the Apache License, Version 2.0 (the "License");
  ~    you may not use this file except in compliance with the License.
  ~    You may obtain a copy of the License at
  ~
  ~        http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~    Unless required by applicable law or agreed to in writing, software
  ~    distributed under the License is distributed on an "AS IS" BASIS,
  ~    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~    See the License for the specific language governing permissions and
  ~    limitations under the License.
  -->

<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:context="http://www.springframework.org/schema/context"
    xsi:schemaLocation="http://www.springframework.org/schema/beans         http://www.springframework.org/schema/beans/spring-beans-4.1.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.1.xsd">
    <!--
       context that combines components to provide an environment for running the crawler
    -->
    <context:property-placeholder
        location="file:${WON_CONFIG_DIR}/owner.properties"
        ignore-unresolvable="true" />
    <context:component-scan base-package="won.protocol.util.linkeddata.uriresolver" />
    <import resource="classpath:/spring/component/wonNodeInformationService.xml" />
    <import resource="classpath:/spring/component/threadpool.xml"/>
    <import resource="classpath:/spring/component/ehcache/spring-owner-ehcache.xml" />
    <import resource="classpath:/spring/component/linkeddatasource/owner-linkeddatasource.xml" />
    <bean id="clRunnerBean" class="won.utils.crawl.app.CLRunnerBean" >
        <property name="linkedDataSource" ref="linkedDataSource"/>
    </bean>
    <bean id="linkedDataRestClient"
        class="won.protocol.rest.LinkedDataRestClientHttps">
        <constructor-arg ref="keyStoreService" />
        <constructor-arg ref="trustStoreService" />
        <constructor-arg name="trustStrategy">
            <bean class="won.cryptography.ssl.TrustAnyCertificateStrategy" />
        </constructor-arg>
        <constructor-arg name="keyPairAliasDerivationStrategy"
            ref="ownerUriAliasStrategy" />
    </bean>
    <!-- owner webapp crypto config -->
    <bean id="keyStoreService"
        class="won.cryptography.service.keystore.FileBasedKeyStoreService"
        init-method="init">
        <constructor-arg type="java.lang.String"
            value="${keystore.location}" />
        <constructor-arg type="java.lang.String"
            value="${keystore.password}" />
    </bean>
    <bean id="trustStoreService"
        class="won.cryptography.service.TrustStoreService" init-method="init">
        <constructor-arg type="java.lang.String"
            value="${truststore.location}" />
        <constructor-arg type="java.lang.String"
            value="${truststore.password}" />
    </bean>
    <bean id="ownerUriAliasStrategy"
        class="won.cryptography.keymanagement.PredefinedAliasDerivationStrategy">
        <constructor-arg name="predefinedAlias"
            value="${uri.prefix.owner}" />
    </bean>
</beans>
