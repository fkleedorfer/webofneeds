@base            <https://example.com/test/atom1> .
@prefix ex:      <https://example.com/test/> .
@prefix auth:    <https://w3id.org/won/auth#> .
@prefix won:     <https://w3id.org/won/core#> .
@prefix chat:    <https://w3id.org/won/ext/chat#> .
@prefix wx-hold: <https://w3id.org/won/ext/hold#> .
@prefix owl:     <http://www.w3.org/2002/07/owl#> .
@prefix xsd:     <http://www.w3.org/2001/XMLSchema#> .
@prefix atom1:   <http://example.org/test/atom1#> .
@prefix atom2:   <http://example.org/test/atom2#> .
@prefix atom3:   <http://example.org/test/atom3#> .
@prefix msg:     <https://w3id.org/won/message#> .
@prefix rdfs:    <http://www.w3.org/2000/01/rdf-schema#> .
@prefix rdfg:    <http://www.w3.org/2004/04/trix/rdfg-1/> .
@prefix rdf:     <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .

ex:expectedResult1
    a                       auth:ExpectedAclEvalResult ;
    auth:decision           auth:accessGranted ;
    auth:requestedOperation <#request1> .

ex:expectedResult2
    a                       auth:ExpectedAclEvalResult ;
    auth:decision           auth:accessGranted ;
    auth:requestedOperation <#request2> .


# Atom is connectable on socket layer

<#authorization>
    a            auth:Authorization ;
    auth:grantee [ auth:socket [ auth:socketType wx-hold:HolderSocket ;
                                 auth:connection [ auth:connectionState won:Connected ;
                                                   auth:targetAtom      [ ] ] ] ;
                   auth:socket [ auth:socketType wx-hold:HoldableSocket ;
                                 auth:connection [ auth:connectionState won:Connected ;
                                                   auth:targetAtom      [ ] ] ] ] ;
    auth:grant   [ auth:graph [ auth:operation auth:opRead ] ] .

<#request1>
    a                  auth:OperationRequest ;
    auth:operation     auth:opRead ;
    auth:requestor     ex:atom1 ;
    auth:reqAtom       ex:atom2 ;
    auth:reqConnection atom2:conn21 ;
    auth:reqPosition   auth:positionAtomGraph .

<#request2>
    a                  auth:OperationRequest ;
    auth:operation     auth:opRead ;
    auth:requestor     ex:atom2 ;
    auth:reqAtom       ex:atom1 ;
    auth:reqConnection atom1:conn12 ;
    auth:reqPosition   auth:positionAtomGraph .


# Persona 1

ex:atom1
    a                    won:Atom ;
    won:socket           atom1:holderSocket ;
    won:state            won:Active ;
    won:messageContainer atom1:msg ;
    won:wonNode          ex:node .


atom1:holderSocket
    a                    won:Socket ;
    won:socketDefinition wx-hold:HolderSocket ;
    won:connections      atom1:holderSocketConnections .

atom1:holderSocketConnections
    a           won:ConnectionContainer ;
    rdfs:member atom1:conn12 .

atom1:conn12
    a                   won:Connection ;
    won:socket          atom1:holderSocket ;
    won:targetAtom      ex:atom2 ;
    won:connectionState won:Connected .

# Atom 2 - holdable

ex:atom2
    a                    won:Atom ;
    won:socket           atom2:holdableSocket ;
    won:state            won:Active ;
    won:messageContainer atom2:msg ;
    won:wonNode          ex:node .

atom2:holdableSocket
    a                    won:Socket ;
    won:socketDefinition wx-hold:HoldableSocket ;
    won:connections      atom2:holdableSocketConnections .

atom2:holdableSocketConnections
    a           won:ConnectionContainer ;
    rdfs:member atom2:conn21 .

atom2:conn21
    a                   won:Connection ;
    won:socket          atom2:holdableSocket ;
    won:targetAtom      ex:atom1 ;
    won:connectionState won:Connected .

# Atom 3 - not holdable

ex:atom3
    a                    won:Atom ;
    won:socket           atom3:chatSocket ;
    won:state            won:Active ;
    won:messageContainer atom3:msg ;
    won:wonNode          ex:node .

atom3:chatSocket
    a                    won:Socket ;
    won:socketDefinition chat:ChatSocket .


