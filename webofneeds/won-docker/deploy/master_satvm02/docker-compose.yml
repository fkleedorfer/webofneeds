version: "2"
services:
  # owner server self-signed certificate for communication with wonnode
  gencertownerblue:
    build: ../../image/gencert
    image: webofneeds/gencert:master
    environment:
      - "CN=ownerblue.master.matchat.org"
      - "PASS=file:/usr/local/certs/out/won_certificate_passwd_file"
      - "OPENSSL_CONFIG_FILE=/usr/local/openssl.conf"
    volumes:
      - $base_folder/won-server-certsownerblue:/usr/local/certs/out/
      - $base_folder/openssl.conf:/usr/local/openssl.conf

  # owner server self-signed certificate for communication with wonnode
  gencertownergreen:
    build: ../../image/gencert
    image: webofneeds/gencert:master
    environment:
      - "CN=ownergreen.master.matchat.org"
      - "PASS=file:/usr/local/certs/out/won_certificate_passwd_file"
      - "OPENSSL_CONFIG_FILE=/usr/local/openssl.conf"
    volumes:
      - $base_folder/won-server-certsownergreen:/usr/local/certs/out/
      - $base_folder/openssl.conf:/usr/local/openssl.conf

  # portsgres atom databases for owner and wonnode blue
  postgresblue:
    restart: always
    image: webofneeds/postgres:master
    build: ../../image/postgres
    environment:
      - "POSTGRES_PASSWORD=$postgres_db_passwd"
      - "PGDATA=/var/lib/postgresql/data/pgdata"
    volumes:
      - $base_folder/postgresblue/data/pgdata:/var/lib/postgresql/data/pgdata
    ports:
      - "5432:5432"

  # wonnode blue => https://nodeblue.master.matchat.org/won
  wonnodeblue:
    restart: always
    build: ../../image/wonnode
    image: webofneeds/wonnode:master
    environment:
      - "URI_HOST=nodeblue.master.matchat.org"
      - "HTTP_PORT=8888"
      - "URI_PREFIX=https://nodeblue.master.matchat.org/won"
      - "CLIENT_AUTHENTICATION_BEHIND_PROXY=true"
      - "DB_SQL_JDBCDRIVERCLASS=org.postgresql.Driver"
      - "DB_SQL_JDBCURL=jdbc:postgresql://satvm02.researchstudio.at:5432/won_node"
      - "DB_DDL_STRATEGY=validate"
      - "DB_SQL_USER=won"
      - "DB_SQL_PASSWORD=$postgres_db_passwd"
      - "CERTIFICATE_PASSWORD=$won_certificate_passwd"
      - "ACTIVEMQ_BROKER_PORT=61612"
      - "JMEM_OPTS=-XX:+HeapDumpOnOutOfMemoryError"
      - "JMX_OPTS=-Xdebug -Xrunjdwp:transport=dt_socket,address=*:62916,server=y,suspend=n
        -Dcom.sun.management.jmxremote.port=9016 -Dcom.sun.management.jmxremote.authenticate=false
        -Dcom.sun.management.jmxremote.ssl=false -Dcom.sun.management.jmxremote.rmi.port=9016
        -Djava.rmi.server.hostname=satvm02.researchstudio.at"
    ports:
      - "8888:8443"
      - "61622:61612"
      - "62916:62916"
      - "9016:9016"
    volumes:
      - $base_folder/letsencrypt/certs/live/matchat.org/fullchain.pem:/usr/local/tomcat/conf/ssl/t-cert.pem
      - $base_folder/letsencrypt/certs/live/matchat.org/privkey.pem:/usr/local/tomcat/conf/ssl/t-key.pem
      - $base_folder/letsencrypt/certs/live/matchat.org/t-key-cert.pfx:/usr/local/tomcat/conf/ssl/t-key-cert.pfx
      - $base_folder/letsencrypt/certs/live/matchat.org/t-keystore.jks:/usr/local/tomcat/conf/ssl/t-keystore.jks
      - $base_folder/won-client-certs/wonnodeblue:/usr/local/tomcat/won/client-certs/
    depends_on:
      - postgresblue

  # owner blue => https://ownerblue.master.matchat.org/owner
  ownerblue:
    restart: always
    build: ../../image/owner
    image: webofneeds/owner:master
    environment:
      - "NODE_DEFAULT_HOST=nodeblue.master.matchat.org"
      - "URI_HOST=ownerblue.master.matchat.org"
      - "HTTP_PORT=8081"
      - "NODE_DEFAULT_HTTP_PORT=443"
      - "URI_PREFIX=https://ownerblue.master.matchat.org"
      - "URI_PREFIX_NODE_DEFAULT=https://nodeblue.master.matchat.org/won"
      - "DB_SQL_JDBCDRIVERCLASS=org.postgresql.Driver"
      - "DB_SQL_JDBCURL=jdbc:postgresql://satvm02.researchstudio.at:5432/won_owner"
      - "DB_DDL_STRATEGY=validate"
      - "DB_SQL_USER=won"
      - "DB_SQL_PASSWORD=$postgres_db_passwd"
      - "CERTIFICATE_PASSWORD=$won_certificate_passwd"
      - "EMAIL_FROM_WON_USER=$MAIL_USER"
      - "EMAIL_FROM_WON_PASSWORD=$MAIL_PASS"
      - "EMAIL_FROM_WON_SMTP_HOST=$MAIL_HOST"
      - "JMEM_OPTS=-XX:+HeapDumpOnOutOfMemoryError"
      - "JMX_OPTS=-Xdebug -Xrunjdwp:transport=dt_socket,address=*:62917,server=y,suspend=n
        -Dcom.sun.management.jmxremote.port=9017 -Dcom.sun.management.jmxremote.authenticate=false
        -Dcom.sun.management.jmxremote.ssl=false -Dcom.sun.management.jmxremote.rmi.port=9017
        -Djava.rmi.server.hostname=satvm02.researchstudio.at"
    ports:
      - "8081:8443"
      - "62917:62917"
      - "9017:9017"
    volumes:
      - $base_folder/custom_owner_skin_blue:/usr/local/tomcat/webapps/owner/skin/current/
      - $base_folder/won-server-certsownerblue:/usr/local/tomcat/conf/ssl/
      - $base_folder/won-client-certs/ownerblue:/usr/local/tomcat/won/client-certs/
    depends_on:
      - wonnodeblue
      - postgresblue
      - gencertownerblue

  # portsgres atom databases for owner and wonnode green
  postgresgreen:
    restart: always
    image: webofneeds/postgres:master
    build: ../../image/postgres
    environment:
      - "POSTGRES_PASSWORD=$postgres_db_passwd"
      - "PGDATA=/var/lib/postgresql/data/pgdata"
    volumes:
      - $base_folder/postgresgreen/data/pgdata:/var/lib/postgresql/data/pgdata
    ports:
      - "5433:5432"

  # wonnode green (proxied by nginx) => https://nodegreen.master.matchat.org/won
  wonnodegreen:
    restart: always
    build: ../../image/wonnode
    image: webofneeds/wonnode:master
    environment:
      - "URI_HOST=nodegreen.master.matchat.org"
      - "HTTP_PORT=8889"
      - "URI_PREFIX=https://nodegreen.master.matchat.org/won"
      - "CLIENT_AUTHENTICATION_BEHIND_PROXY=true"
      - "DB_SQL_JDBCDRIVERCLASS=org.postgresql.Driver"
      - "DB_SQL_JDBCURL=jdbc:postgresql://satvm02.researchstudio.at:5433/won_node"
      - "DB_DDL_STRATEGY=validate"
      - "DB_SQL_USER=won"
      - "DB_SQL_PASSWORD=$postgres_db_passwd"
      - "CERTIFICATE_PASSWORD=$won_certificate_passwd"
      - "ACTIVEMQ_BROKER_PORT=61611"
      - "JMEM_OPTS=-XX:+HeapDumpOnOutOfMemoryError"
      - "JMX_OPTS=-Xdebug -Xrunjdwp:transport=dt_socket,address=*:62918,server=y,suspend=n
        -Dcom.sun.management.jmxremote.port=9018 -Dcom.sun.management.jmxremote.authenticate=false
        -Dcom.sun.management.jmxremote.ssl=false -Dcom.sun.management.jmxremote.rmi.port=9018
        -Djava.rmi.server.hostname=satvm02.researchstudio.at"
    ports:
      - "8889:8443"
      - "61621:61611"
      - "62918:62918"
      - "9018:9018"
    volumes:
      - $base_folder/letsencrypt/certs/live/matchat.org/fullchain.pem:/usr/local/tomcat/conf/ssl/t-cert.pem
      - $base_folder/letsencrypt/certs/live/matchat.org/privkey.pem:/usr/local/tomcat/conf/ssl/t-key.pem
      - $base_folder/letsencrypt/certs/live/matchat.org/t-key-cert.pfx:/usr/local/tomcat/conf/ssl/t-key-cert.pfx
      - $base_folder/letsencrypt/certs/live/matchat.org/t-keystore.jks:/usr/local/tomcat/conf/ssl/t-keystore.jks
      - $base_folder/won-client-certs/wonnodegreen:/usr/local/tomcat/won/client-certs/
    depends_on:
      - postgresgreen

    # owner green (proxied by nginx) => https://ownergreen.master.matchat.org/owner
  ownergreen:
    restart: always
    build: ../../image/owner
    image: webofneeds/owner:master
    environment:
      - "NODE_DEFAULT_HOST=nodegreen.master.matchat.org"
      - "URI_HOST=ownergreen.master.matchat.org"
      - "HTTP_PORT=8082"
      - "NODE_DEFAULT_HTTP_PORT=443"
      - "URI_PREFIX=https://ownergreen.master.matchat.org"
      - "URI_PREFIX_NODE_DEFAULT=https://nodegreen.master.matchat.org/won"
      - "DB_SQL_JDBCDRIVERCLASS=org.postgresql.Driver"
      - "DB_SQL_JDBCURL=jdbc:postgresql://satvm02.researchstudio.at:5433/won_owner"
      - "DB_DDL_STRATEGY=validate"
      - "DB_SQL_USER=won"
      - "DB_SQL_PASSWORD=$postgres_db_passwd"
      - "CERTIFICATE_PASSWORD=$won_certificate_passwd"
      - "EMAIL_FROM_WON_USER=$MAIL_USER"
      - "EMAIL_FROM_WON_PASSWORD=$MAIL_PASS"
      - "EMAIL_FROM_WON_SMTP_HOST=$MAIL_HOST"
      - "JMEM_OPTS=-XX:+HeapDumpOnOutOfMemoryError"
      - "JMX_OPTS=-Xdebug -Xrunjdwp:transport=dt_socket,address=*:62919,server=y,suspend=n
        -Dcom.sun.management.jmxremote.port=9019 -Dcom.sun.management.jmxremote.authenticate=false
        -Dcom.sun.management.jmxremote.ssl=false -Dcom.sun.management.jmxremote.rmi.port=9019
        -Djava.rmi.server.hostname=satvm02.researchstudio.at"
    ports:
      - "8082:8443"
      - "62919:62919"
      - "9019:9019"
    volumes:
      - $base_folder/custom_owner_skin_green:/usr/local/tomcat/webapps/owner/skin/current/
      - $base_folder/won-server-certsownergreen:/usr/local/tomcat/conf/ssl/
      - $base_folder/won-client-certs/ownergreen:/usr/local/tomcat/won/client-certs/
    depends_on:
      - wonnodegreen
      - postgresgreen
      - gencertownergreen

  # mongodb for persistent debug bot
  mongodb:
    restart: always
    image: tutum/mongodb:3.2
    environment:
      - "MONGODB_USER=won"
      - "MONGODB_DATABASE=master_bot"
      - "MONGODB_PASS=$mongo_db_passwd"
    ports:
      - "27018:27017"
      - "28018:28017"
    volumes:
      - $base_folder/mongodb/data/db:/data/db

  # debug bot used to test atom communication, connect to wonnodes 1 and 2
  debug_bot:
    restart: always
    image: webofneeds/won-debugbot:latest
    environment:
      - "WON_KEYSTORE_DIR=/usr/src/bots/client-certs/"
      - "WON_NODE_URI=https://nodeblue.master.matchat.org/won"
      - "URI_PREFIX_OWNER=https://master.matchat.org/debug_bot" # set this for the trust store alias
      - "WON_NODE_URIS=https://nodeblue.master.matchat.org/won/resource https://nodegreen.master.matchat.org/won/resource"
      - "BOTCONTEXT_IMPL=mongoBotContext"
      - "BOTCONTEXT_MONGODB_USER=won"
      - "BOTCONTEXT_MONGODB_PASS=$mongo_db_passwd"
      - "BOTCONTEXT_MONGODB_HOST=satvm02.researchstudio.at"
      - "BOTCONTEXT_MONGODB_PORT=27018"
      - "BOTCONTEXT_MONGODB_DATABASE=master_bot"
    volumes:
      - $base_folder/won-client-certs/debug_bot:/usr/src/bots/client-certs/
    depends_on:
      - wonnodeblue
      - wonnodegreen
      - mongodb

  hokify_bot:
    restart: always
    image: webofneeds/won-jobbot:latest
    environment:
      - "WON_KEYSTORE_DIR=/usr/src/bots/client-certs/"
      - "WON_NODE_URI=https://nodeblue.master.matchat.org/won"
      #      - "LOGGING_CONFIG=/usr/src/bots/logback.xml"
      - "URI_PREFIX_OWNER=https://master.matchat.org/hokify_bot" # set this for the trust store alias
      - "WON_NODE_URIS=https://nodeblue.master.matchat.org/won/resource https://nodegreen.master.matchat.org/won/resource"
      - "HOKIFYJOBBOT_JSONURL=https://hokify.at/jobfeed-webofneeds.json/"
      - "HOKIFYJOBBOT_GEOURL=https://nominatim.openstreetmap.org/search"
      - "HOKIFYJOBBOT_UPDATETIME=60"
      - "HOKIFYJOBBOT_PUBLISHTIME=10"
      - "HOKIFYJOBBOT_CREATEALLINONE=false"
      - "BOTCONTEXT_IMPL=mongoBotContext"
      - "BOTCONTEXT_MONGODB_USER=won"
      - "BOTCONTEXT_MONGODB_PASS=$mongo_db_passwd"
      - "BOTCONTEXT_MONGODB_HOST=satvm02.researchstudio.at"
      - "BOTCONTEXT_MONGODB_PORT=27018"
      - "BOTCONTEXT_MONGODB_DATABASE=master_bot"
    volumes:
      - $base_folder/won-client-certs/hokify_bot:/usr/src/bots/client-certs/
    #     - $base_folder/logback_debug_bot.xml:/usr/src/bots/logback.xml
    depends_on:
      - mongodb
      - wonnodeblue
      - wonnodegreen

  spoco_raid_bot:
    restart: always
    image: webofneeds/won-spoco-raidbot:latest
    environment:
      - "WON_KEYSTORE_DIR=/usr/src/bots/client-certs/"
      - "WON_NODE_URI=https://nodeblue.master.matchat.org/won"
      # - "LOGGING_CONFIG=/usr/src/bots/logback.xml"
      - "URI_PREFIX_OWNER=https://master.matchat.org/raid_bot" # set this for the trust store alias
      - "WON_NODE_URIS=https://nodeblue.master.matchat.org/won/resource https://nodegreen.master.matchat.org/won/resource"
      - "API_LINZ_ENDPOINT=$RB_ENDPOINT_LINZ"
      - "API_LINZ_TOKEN=$RB_TOKEN_LINZ"
      - "API_VIENNA_ENDPOINT=$RB_ENDPOINT_VIENNA"
      - "API_VIENNA_USERNAME=$RB_USER_VIENNA"
      - "API_VIENNA_REQUEST=$RB_REQUEST_VIENNA"
      - "RAIDBOT_FETCHINTERVAL=600" #fetch new raids every 600 seconds (10min)
      - "RAIDBOT_SANITIZEINTERVAL=900" #sanitize existing raids every 900 seconds (15min)
      - "BOTCONTEXT_IMPL=mongoBotContext"
      - "BOTCONTEXT_MONGODB_USER=won"
      - "BOTCONTEXT_MONGODB_PASS=$mongo_db_passwd"
      - "BOTCONTEXT_MONGODB_HOST=satvm02.researchstudio.at"
      - "BOTCONTEXT_MONGODB_PORT=27018"
      - "BOTCONTEXT_MONGODB_DATABASE=master_bot"
      # - "RAIDBOT_PHASEOUT=true" # set this if you do not want to create new atoms but just manage the existing ones
    volumes:
      - $base_folder/won-client-certs/raid_bot:/usr/src/bots/client-certs/
    #     - $base_folder/logback_debug_bot.xml:/usr/src/bots/logback.xml
    depends_on:
      - mongodb
      - wonnodeblue
      - wonnodegreen

  #  mail_bot:
#    restart: always
#    build: ../../image/bots
#    image: webofneeds/bots:int
#    environment:
#      - "MAIN_BOT=won.bot.app.Mail2WonBotApp"
#      - "NODE_DEFAULT_HOST=nodeblue.master.matchat.org"
#      - "NODE_DEFAULT_HTTP_PORT=443"
#      - "URI_PREFIX_OWNER=https://master.matchat.org/mail_bot" # set this for the trust store alias
#      - "WON_NODE_URIS=https://nodeblue.master.matchat.org/won/resource https://nodegreen.master.matchat.org/won/resource"
#      - "BOTCONTEXT_IMPL=mongoBotContext"
#      - "BOTCONTEXT_MONGODB_USER=won"
#      - "BOTCONTEXT_MONGODB_PASS=$mongo_db_passwd"
#      - "BOTCONTEXT_MONGODB_HOST=satvm02.researchstudio.at"
#      - "BOTCONTEXT_MONGODB_PORT=27018"
#      - "BOTCONTEXT_MONGODB_DATABASE=master_bot"
#      - "MAILBOT_EMAIL_USER=won-internal"
#      - "MAILBOT_EMAIL_ADDRESS=won-internal@researchstudio.at"
#      - "MAILBOT_EMAIL_NAME=Web of Needs Master Mail Bot"
#      - "MAILBOT_EMAIL_PASSWORD=$mailinglist_passwd"
#      - "MAILBOT_EMAIL_IMAP_HOST=imap.researchstudio.at"
#      - "MAILBOT_EMAIL_IMAP_PORT=993"
#      - "MAILBOT_EMAIL_SMTP_HOST=smtp.researchstudio.at"
#      - "MAILBOT_EMAIL_SMTP_PORT=587"
#    depends_on:
#      - mongodb
#      - wonnodeblue
#      - wonnodegreen

  # bigdata rdf store for matcher service (this image is not built at deployment, it is downloaded from dockerhub)
  bigdata:
    restart: always
    build: ../../image/bigdata
    volumes:
      - $base_folder/bigdata/data/:/usr/src/bigdata/data
    ports:
      - "9999:9999"

  # matcher service connect with wonnodes 1 and 2
  matcher_service:
    restart: always
    build: ../../image/matcher-service
    image: webofneeds/matcher_service:master
    environment:
      - "NODE_HOST=satvm02.researchstudio.at"
      - "MATCHER_URI=https://master.matchat.org/matcher_service" # set this for the trust store alias
      - "CLUSTER_SEEDNODES=satvm02.researchstudio.at:2551,satvm02.researchstudio.at:2552"
      - "URI_SPARQL_ENDPOINT=http://satvm02.researchstudio.at:9999/blazegraph/namespace/kb/sparql"
      - "WONNODECONTROLLER_WONNODE_CRAWL=https://nodeblue.master.matchat.org/won/resource,https://nodegreen.master.matchat.org/won/resource"
      - "CLUSTER_LOCAL_PORT=2551"
      - "JMEM_OPTS=-XX:+HeapDumpOnOutOfMemoryError"
      - "JMX_OPTS=-Xdebug -Xrunjdwp:transport=dt_socket,address=*:62920,server=y,suspend=n
        -Dcom.sun.management.jmxremote.port=9020 -Dcom.sun.management.jmxremote.authenticate=false
        -Dcom.sun.management.jmxremote.ssl=false -Dcom.sun.management.jmxremote.rmi.port=9020
        -Djava.rmi.server.hostname=satvm02.researchstudio.at"
    ports:
      - "2551:2551"
      - "62920:62920"
      - "9020:9020"
    volumes:
      - $base_folder/won-client-certs/matcher_service:/usr/src/matcher-service/client-certs/
    depends_on:
      - bigdata
      - wonnodeblue
      - wonnodegreen

  # solr server as an atom index
  solr:
    restart: always
    build: ../../image/solr
    image: webofneeds/solr:master
    volumes:
      - $base_folder/solr/won/data:/opt/solr/server/solr/won/data
      - $base_folder/solr/wontest/data:/opt/solr/server/solr/wontest/data
    ports:
      - "8983:8983"

  # solr matcher and connect to matcher service
  matcher_solr:
    restart: always
    build: ../../image/matcher-solr
    image: webofneeds/matcher_solr:master
    environment:
      - "NODE_HOST=satvm02.researchstudio.at"
      - "CLUSTER_SEEDNODES=satvm02.researchstudio.at:2551,satvm02.researchstudio.at:2552"
      - "CLUSTER_LOCAL_PORT=2552"
      - "MATCHER_SOLR_URI_SOLR_SERVER=http://satvm02.researchstudio.at:8983/solr/"
      - "MATCHER_SOLR_URI_SOLR_SERVER_PUBLIC=http://satvm02.researchstudio.at:8983/solr/"
      - "JMEM_OPTS=-XX:+HeapDumpOnOutOfMemoryError"
      - "JMX_OPTS=-Xdebug -Xrunjdwp:transport=dt_socket,address=*:62921,server=y,suspend=n
        -Dcom.sun.management.jmxremote.port=9021 -Dcom.sun.management.jmxremote.authenticate=false
        -Dcom.sun.management.jmxremote.ssl=false -Dcom.sun.management.jmxremote.rmi.port=9021
        -Djava.rmi.server.hostname=satvm02.researchstudio.at"
    ports:
      - "2552:2552"
      - "9021:9021"
      - "62921:62921"
    depends_on:
      - solr
      - matcher_service

  # rescal matcher and connect to matcher service
#  matcher_rescal:
#    restart: always
#    build: ../../image/matcher-rescal
#    image: webofneeds/matcher_rescal:master
#    environment:
#      - "NODE_HOST=satvm02.researchstudio.at"
#      - "CLUSTER_SEEDNODES=satvm02.researchstudio.at:2551,satvm02.researchstudio.at:2553"
#      - "CLUSTER_LOCAL_PORT=2553"
#      - "MATCHER_RESCAL_URI_PUBLIC=http://satvm02.researchstudio.at/rescal/"
#      - "MATCHER_RESCAL_URI_SPARQL_ENDPOINT=http://satvm02.researchstudio.at:9999/blazegraph/namespace/kb/sparql"
#      - "MATCHER_RESCAL_EXECUTIONDURATIONMINUTES=5"
#      - "MATCHER_RESCAL_THRESHOLD=0.15"
#      - "MATCHER_RESCAL_RANK=10"
#      - "JMEM_OPTS=-XX:+HeapDumpOnOutOfMemoryError"
#      - "JMX_OPTS=-Xdebug -Xrunjdwp:transport=dt_socket,address=*:62922,server=y,suspend=n
#        -Dcom.sun.management.jmxremote.port=9022 -Dcom.sun.management.jmxremote.authenticate=false
#        -Dcom.sun.management.jmxremote.ssl=false -Dcom.sun.management.jmxremote.rmi.port=9022
#        -Djava.rmi.server.hostname=satvm02.researchstudio.at"
#    ports:
#      - "2553:2553"
#      - "9022:9022"
#      - "62922:62922"
#    volumes:
#      - $base_folder/agent:/opt/agent/
#    depends_on:
#      - matcher_service

  matcher_sparql:
    restart: always
    build: ../../image/matcher-sparql
    image: webofneeds/matcher_sparql:int
    environment:
      - "NODE_HOST=satvm02.researchstudio.at"
      - "CLUSTER_SEEDNODES=satvm02.researchstudio.at:2551,satvm02.researchstudio.at:2553"
      - "CLUSTER_LOCAL_PORT=2554"
      - "MATCHER_SPARQL_URI_SPARQL_ENDPOINT=http://satvm02.researchstudio.at:9999/blazegraph/namespace/kb/sparql"
      - "MATCHER_SPARQL_URI_PUBLIC=http://satvm02.researchstudio.at/sparql/"
      - "JMEM_OPTS=-XX:+HeapDumpOnOutOfMemoryError"
      - "JMX_OPTS=-Xdebug -Xrunjdwp:transport=dt_socket,address=*:62923,server=y,suspend=n
        -Dcom.sun.management.jmxremote.port=9023 -Dcom.sun.management.jmxremote.authenticate=false
        -Dcom.sun.management.jmxremote.ssl=false -Dcom.sun.management.jmxremote.rmi.port=9023
        -Djava.rmi.server.hostname=satvm05.researchstudio.at"
    ports:
      - "2554:2554"
      - "9023:9023"
      - "62923:62923"
    depends_on:
      - matcher_service
    volumes:
      - $base_folder/won-client-certs/matcher_sparql:/usr/src/matcher-sparql/client-certs/
