@base             <https://example.com/test/atom1> .
@prefix ex:       <https://example.com/test/> .
@prefix auth:     <https://w3id.org/won/auth#> .
@prefix won:      <https://w3id.org/won/core#> .
@prefix wx-buddy: <https://w3id.org/won/ext/buddy#> .
@prefix wx-hold:  <https://w3id.org/won/ext/hold#> .
@prefix owl:      <http://www.w3.org/2002/07/owl#> .
@prefix xsd:      <http://www.w3.org/2001/XMLSchema#> .
@prefix atom1:    <http://example.org/test/atom1#> .
@prefix atom2:    <http://example.org/test/atom2#> .
@prefix atom3:    <http://example.org/test/atom3#> .
@prefix msg:      <https://w3id.org/won/message#> .
@prefix rdfs:     <http://www.w3.org/2000/01/rdf-schema#> .
@prefix rdfg:     <http://www.w3.org/2004/04/trix/rdfg-1/> .
@prefix rdf:      <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .

ex:expectedResult
    a                       auth:ExpectedAclEvalResult ;
    auth:decision           auth:accessGranted ;
    auth:requestedOperation <#request> ;
    auth:issueToken         [ auth:tokenScope   "readHeldAtoms" ;
                              auth:tokenIss     ex:atom1 ;
                              auth:tokenSub     ex:atom2 ;
                              auth:tokenSig     ex:node ;
                              auth:expiresAfter 3600 ] .

# Token for readHeldAtoms

<#authorization>
    a            auth:Authorization ;
    auth:grantee [ auth:socket [ auth:socketType wx-buddy:BuddySocket ;
                                 auth:connection [ auth:connectionState won:Connected ;
                                                   auth:targetAtom      [ ] ] ] ] ;
    auth:grant   [ auth:operation [ auth:requestToken [ auth:tokenScope   "readHeldAtoms" ;
                                                        auth:expiresAfter 3600 ; ] ] ] .

<#request>
    a                auth:OperationRequest ;
    auth:operation   [ auth:requestToken [ auth:tokenScope "readHeldAtoms" ] ] ;
    auth:requestor   ex:atom2 ;
    auth:reqAtom     ex:atom1 ;
    auth:reqPosition auth:positionRoot ;
    auth:bearsToken  ex:token1 .

ex:token1
    a               auth:AuthToken ;
    auth:tokenScope "readHeldAtoms" ;
    auth:tokenIss   ex:atom1 ;
    auth:tokenSub   ex:atom2 ;
    auth:tokenSig   ex:node ;
    auth:tokenIat   "2020-12-03T22:30:00"^^xsd:dateTime ;
    auth:tokenExp   "2020-12-03T23:30:00"^^xsd:dateTime .


ex:atom1
    a                    won:Atom ;
    won:socket           atom1:buddySocket, atom1:holderSocket ;
    won:state            won:Active ;
    won:messageContainer atom1:msg ;
    won:wonNode          ex:node .

atom1:buddySocket
    a                    won:Socket ;
    won:socketDefinition wx-buddy:BuddySocket ;
    won:connections      atom1:buddySocketConnections .

atom1:buddySocketConnections
    rdfs:member atom1:bsConn1 .

atom1:bsConn1
    a                   won:Connection ;
    won:targetAtom      ex:atom2 ;
    won:connectionState won:Connected ;
    won:socket          atom1:buddySocket .

atom1:holderSocket
    a                    won:Socket ;
    won:socketDefinition wx-hold:HolderSocket ;
    won:connections      atom1:holderSocketConnections .

atom1:holderSocketConnections
    rdfs:member atom1:hsConn1 .

atom1:hsConn1
    a                   won:Connection ;
    won:targetAtom      ex:atom3 ;
    won:connectionState won:Connected ;
    won:socket          atom1:holderSocket .


ex:atom2
    a                    won:Atom ;
    won:socket           atom2:buddySocket ;
    won:state            won:Active ;
    won:messageContainer atom2:msg ;
    won:wonNode          ex:node .

atom2:buddySocket
    a                    won:Socket ;
    won:socketDefinition wx-buddy:BuddySocket ;
    won:connections      atom2:buddySocketConnections .

atom2:buddySocketConnections
    rdfs:member atom2:bsConn1 .

atom2:bsConn1
    a                   won:Connection ;
    won:targetAtom      ex:atom1 ;
    won:connectionState won:Connected ;
    won:socket          atom2:buddySocket .

ex:atom3
    a           won:Atom ;
    won:state   won:Active ;
    won:wonNode ex:node .