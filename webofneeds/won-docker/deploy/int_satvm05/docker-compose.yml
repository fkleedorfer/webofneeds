version: "2"
services:
  # create self-signed server certificate for owner and wonnode 1
  gencert1:
    build: ../../image/gencert
    image: webofneeds/gencert:int
    environment:
      - "CN=satvm05.researchstudio.at"
      - "PASS=pass:$won_certificate_passwd"
    volumes:
      - $base_folder/won-server-certs1:/usr/local/certs/out/

  # portsgres atom databases for owner and wonnode 1
  postgres1:
    restart: always
    image: webofneeds/postgres:int
    build: ../../image/postgres
    environment:
      - "POSTGRES_PASSWORD=$postgres_db_passwd"
      - "PGDATA=/var/lib/postgresql/data/pgdata"
    volumes:
      - $base_folder/postgres1/data/pgdata:/var/lib/postgresql/data/pgdata
    ports:
      - "5432:5432"

  # wonnode 1 => https://satvm05.researchstudio.at:8888/won
  wonnode1:
    restart: always
    build: ../../image/wonnode
    image: webofneeds/wonnode:int
    environment:
      - "URI_HOST=satvm05.researchstudio.at"
      - "HTTP_PORT=8888"
      - "URI_PREFIX=https://satvm05.researchstudio.at:8888/won"
      - "CLIENT_AUTHENTICATION_BEHIND_PROXY=false"
      - "DB_SQL_JDBCDRIVERCLASS=org.postgresql.Driver"
      - "DB_SQL_JDBCURL=jdbc:postgresql://satvm05.researchstudio.at:5432/won_node"
      - "DB_DDL_STRATEGY=validate"
      - "DB_SQL_USER=won"
      - "DB_SQL_PASSWORD=$postgres_db_passwd"
      - "CERTIFICATE_PASSWORD=$won_certificate_passwd"
      - "ACTIVEMQ_BROKER_PORT=61616"
      - "JMEM_OPTS=-XX:+HeapDumpOnOutOfMemoryError"
      - "JMX_OPTS=-Xdebug -Xrunjdwp:transport=dt_socket,address=*:62916,server=y,suspend=n
        -Dcom.sun.management.jmxremote.port=9016 -Dcom.sun.management.jmxremote.authenticate=false
        -Dcom.sun.management.jmxremote.ssl=false -Dcom.sun.management.jmxremote.rmi.port=9016
        -Djava.rmi.server.hostname=satvm05.researchstudio.at"
    ports:
      - "8888:8443"
      - "61616:61616"
      - "62916:62916"
      - "9016:9016"
    volumes:
      - $base_folder/won-server-certs1:/usr/local/tomcat/conf/ssl/
      - $base_folder/won-client-certs/wonnode1:/usr/local/tomcat/won/client-certs/
    depends_on:
      - postgres1
      - gencert1

  # owner 1 => https://satvm05.researchstudio.at:8081/owner
  owner1:
    restart: always
    build: ../../image/owner
    image: webofneeds/owner:int
    environment:
      - "NODE_DEFAULT_HOST=satvm05.researchstudio.at"
      - "URI_HOST=satvm05.researchstudio.at"
      - "HTTP_PORT=8081"
      - "NODE_DEFAULT_HTTP_PORT=8888"
      - "URI_PREFIX=https://satvm05.researchstudio.at:8888"
      - "URI_PREFIX_NODE_DEFAULT=https://satvm05.researchstudio.at:8888/won"
      - "DB_SQL_JDBCDRIVERCLASS=org.postgresql.Driver"
      - "DB_SQL_JDBCURL=jdbc:postgresql://satvm05.researchstudio.at:5432/won_owner"
      - "DB_DDL_STRATEGY=validate"
      - "DB_SQL_USER=won"
      - "DB_SQL_PASSWORD=$postgres_db_passwd"
      - "CERTIFICATE_PASSWORD=$won_certificate_passwd"
      - "EMAIL_FROM_WON_USER=$MAIL_USER"
      - "EMAIL_FROM_WON_PASSWORD=$MAIL_PASS"
      - "EMAIL_FROM_WON_SMTP_HOST=$MAIL_HOST"
      - "JMEM_OPTS=-XX:+HeapDumpOnOutOfMemoryError"
      - "JMX_OPTS=-Xdebug -Xrunjdwp:transport=dt_socket,address=*:62917,server=y,suspend=n
        -Dcom.sun.management.jmxremote.port=9017 -Dcom.sun.management.jmxremote.authenticate=false
        -Dcom.sun.management.jmxremote.ssl=false -Dcom.sun.management.jmxremote.rmi.port=9017
        -Djava.rmi.server.hostname=satvm05.researchstudio.at"
    ports:
      - "8081:8443"
      - "62917:62917"
      - "9017:9017"
    volumes:
      - $base_folder/won-server-certs1:/usr/local/tomcat/conf/ssl/
      - $base_folder/won-client-certs/owner1:/usr/local/tomcat/won/client-certs/
    depends_on:
      - wonnode1
      - postgres1
      - gencert1

  # create self-signed server certificate for for owner and wonnode 2
  gencert2:
    restart: always
    build: ../../image/gencert
    image: webofneeds/gencert:int
    environment:
      - "CN=satvm05.researchstudio.at"
      - "PASS=pass:$won_certificate_passwd"
    volumes:
      - $base_folder/won-server-certs2:/usr/local/certs/out/

  # nginx proxy server for owner and wonnode 2
  nginx:
    restart: always
    image: nginx
    ports:
      - "80:80"
      - "443:443"
      - "61617:61617"
    volumes:
      - $base_folder/nginx-int.conf:/etc/nginx/nginx.conf
      - $base_folder/won-server-certs2:/etc/nginx/won-server-certs/
    depends_on:
      - gencert2

  # portsgres atom databases for owner and wonnode 2
  postgres2:
    restart: always
    image: webofneeds/postgres:int
    build: ../../image/postgres
    environment:
      - "POSTGRES_PASSWORD=$postgres_db_passwd"
      - "PGDATA=/var/lib/postgresql/data/pgdata"
    volumes:
      - $base_folder/postgres2/data/pgdata:/var/lib/postgresql/data/pgdata
    ports:
      - "5433:5432"

  # wonnode 2 (proxied by nginx) => https://satvm05.researchstudio.at/won
  wonnode2:
    restart: always
    build: ../../image/wonnode
    image: webofneeds/wonnode:int
    environment:
      - "URI_HOST=satvm05.researchstudio.at"
      - "HTTP_PORT=8889"
      - "URI_PREFIX=https://satvm05.researchstudio.at/won"
      - "CLIENT_AUTHENTICATION_BEHIND_PROXY=false"
      - "DB_SQL_JDBCDRIVERCLASS=org.postgresql.Driver"
      - "DB_SQL_JDBCURL=jdbc:postgresql://satvm05.researchstudio.at:5433/won_node"
      - "DB_DDL_STRATEGY=validate"
      - "DB_SQL_USER=won"
      - "DB_SQL_PASSWORD=$postgres_db_passwd"
      - "CERTIFICATE_PASSWORD=$won_certificate_passwd"
      - "ACTIVEMQ_BROKER_PORT=61617"
      - "JMEM_OPTS=-XX:+HeapDumpOnOutOfMemoryError"
      - "JMX_OPTS=-Xdebug -Xrunjdwp:transport=dt_socket,address=*:62918,server=y,suspend=n
        -Dcom.sun.management.jmxremote.port=9018 -Dcom.sun.management.jmxremote.authenticate=false
        -Dcom.sun.management.jmxremote.ssl=false -Dcom.sun.management.jmxremote.rmi.port=9018
        -Djava.rmi.server.hostname=satvm05.researchstudio.at"
    ports:
      - "8889:8443"
      - "61618:61617"
      - "62918:62918"
      - "9018:9018"
    volumes:
      - $base_folder/won-server-certs2:/usr/local/tomcat/conf/ssl/
      - $base_folder/won-client-certs/wonnode2:/usr/local/tomcat/won/client-certs/
    depends_on:
      - nginx
      - postgres2
      - gencert2

    # owner 2 (proxied by nginx) => https://satvm05.researchstudio.at/owner
  owner2:
    restart: always
    build: ../../image/owner
    image: webofneeds/owner:int
    environment:
      - "NODE_DEFAULT_HOST=satvm05.researchstudio.at"
      - "URI_HOST=satvm05.researchstudio.at"
      - "HTTP_PORT=8082"
      - "NODE_DEFAULT_HTTP_PORT=443"
      - "URI_PREFIX=https://satvm05.researchstudio.at"
      - "URI_PREFIX_NODE_DEFAULT=https://satvm05.researchstudio.at/won"
      - "DB_SQL_JDBCDRIVERCLASS=org.postgresql.Driver"
      - "DB_SQL_JDBCURL=jdbc:postgresql://satvm05.researchstudio.at:5433/won_owner"
      - "DB_DDL_STRATEGY=validate"
      - "DB_SQL_USER=won"
      - "DB_SQL_PASSWORD=$postgres_db_passwd"
      - "CERTIFICATE_PASSWORD=$won_certificate_passwd"
      - "EMAIL_FROM_WON_USER=$MAIL_USER"
      - "EMAIL_FROM_WON_PASSWORD=$MAIL_PASS"
      - "EMAIL_FROM_WON_SMTP_HOST=$MAIL_HOST"
      - "JMEM_OPTS=-XX:+HeapDumpOnOutOfMemoryError"
      - "JMX_OPTS=-Xdebug -Xrunjdwp:transport=dt_socket,address=*:62919,server=y,suspend=n
        -Dcom.sun.management.jmxremote.port=9019 -Dcom.sun.management.jmxremote.authenticate=false
        -Dcom.sun.management.jmxremote.ssl=false -Dcom.sun.management.jmxremote.rmi.port=9019
        -Djava.rmi.server.hostname=satvm05.researchstudio.at"
    ports:
      - "8082:8443"
      - "62919:62919"
      - "9019:9019"
    volumes:
      - $base_folder/won-server-certs2:/usr/local/tomcat/conf/ssl/
      - $base_folder/won-client-certs/owner2:/usr/local/tomcat/won/client-certs/
    depends_on:
      - nginx
      - wonnode2
      - postgres2
      - gencert2

  # mongodb for persistent debug bot
  mongodb:
    restart: always
    image: tutum/mongodb:3.2
    environment:
      - "MONGODB_USER=won"
      - "MONGODB_DATABASE=int_bot"
      - "MONGODB_PASS=$mongo_db_passwd"
    ports:
      - "27018:27017"
      - "28018:28017"
    volumes:
      - $base_folder/mongodb/data/db:/data/db

  # debug bot used to test atom communication, connect to wonnodes 1 and 2
  debug_bot:
    restart: always
    image: webofneeds/won-debugbot:latest
    environment:
      - "WON_KEYSTORE_DIR=/usr/src/bots/client-certs/"
      - "WON_NODE_URI=https://satvm05.researchstudio.at/won"
      #      - "LOGGING_CONFIG=/usr/src/bots/logback.xml"
      - "URI_PREFIX_OWNER=https://satvm05.researchstudio.at/debug_bot" # set this for the trust store alias
      - "WON_NODE_URIS=https://satvm05.researchstudio.at:8888/won/resource https://satvm05.researchstudio.at/won/resource"
    volumes:
      - $base_folder/won-client-certs/debug_bot:/usr/src/bots/client-certs/
    #      - $base_folder/logback_debug_bot.xml:/usr/src/bots/logback.xml
    depends_on:
      - wonnode1
      - wonnode2

  hokify_bot:
    restart: always
    image: webofneeds/won-jobbot:latest
    environment:
      - "WON_KEYSTORE_DIR=/usr/src/bots/client-certs/"
      - "WON_NODE_URI=https://satvm05.researchstudio.at/won"
      #      - "LOGGING_CONFIG=/usr/src/bots/logback.xml"
      - "URI_PREFIX_OWNER=https://satvm05.researchstudio.at/hokify_bot" # set this for the trust store alias
      - "WON_NODE_URIS=https://satvm05.researchstudio.at:8888/won/resource https://satvm05.researchstudio.at/won/resource"
      - "HOKIFYJOBBOT_JSONURL=https://hokify.at/jobfeed-webofneeds.json/"
      - "HOKIFYJOBBOT_GEOURL=https://nominatim.openstreetmap.org/search"
      - "HOKIFYJOBBOT_UPDATETIME=70"
      - "HOKIFYJOBBOT_PUBLISHTIME=10"
      - "HOKIFYJOBBOT_CREATEALLINONE=false"
    volumes:
      - $base_folder/won-client-certs/hokify_bot:/usr/src/bots/client-certs/
    #     - $base_folder/logback_debug_bot.xml:/usr/src/bots/logback.xml
    depends_on:
      - wonnode1
      - wonnode2

  spoco_raid_bot:
    restart: always
    image: webofneeds/won-spoco-raidbot:latest
    environment:
      - "WON_KEYSTORE_DIR=/usr/src/bots/client-certs/"
      - "WON_NODE_URI=https://satvm05.researchstudio.at/won"
      # - "LOGGING_CONFIG=/usr/src/bots/logback.xml"
      - "URI_PREFIX_OWNER=https://satvm05.researchstudio.at/raid_bot" # set this for the trust store alias
      - "WON_NODE_URIS=https://satvm05.researchstudio.at:8888/won/resource https://satvm05.researchstudio.at/won/resource"
      - "API_LINZ_ENDPOINT=$RB_ENDPOINT_LINZ"
      - "API_LINZ_TOKEN=$RB_TOKEN_LINZ"
      - "API_VIENNA_ENDPOINT=$RB_ENDPOINT_VIENNA"
      - "API_VIENNA_USERNAME=$RB_USER_VIENNA"
      - "API_VIENNA_REQUEST=$RB_REQUEST_VIENNA"
      - "RAIDBOT_FETCHINTERVAL=600" #fetch new raids every 600 seconds (10min)
      - "RAIDBOT_SANITIZEINTERVAL=900" #sanitize existing raids every 900 seconds (15min)
    volumes:
      - $base_folder/won-client-certs/raid_bot:/usr/src/bots/client-certs/
    #     - $base_folder/logback_debug_bot.xml:/usr/src/bots/logback.xml
    depends_on:
      - wonnode1
      - wonnode2

  #  mail_bot:
  #    restart: always
  #    build: ../../image/bots
  #    image: webofneeds/bots:int
  #    environment:
  #      - "MAIN_BOT=won.bot.app.Mail2WonBotApp"
  #      - "NODE_DEFAULT_HOST=satvm05.researchstudio.at"
  #      - "NODE_DEFAULT_HTTP_PORT=8888"
  #      - "URI_PREFIX_OWNER=https://satvm05.researchstudio.at/mail_bot" # set this for the trust store alias
  #      - "WON_NODE_URIS=https://satvm05.researchstudio.at:8888/won/resource https://satvm05.researchstudio.at/won/resource"
  #      - "BOTCONTEXT_IMPL=mongoBotContext"
  #      - "BOTCONTEXT_MONGODB_USER=won"
  #      - "BOTCONTEXT_MONGODB_PASS=$mongo_db_passwd"
  #      - "BOTCONTEXT_MONGODB_HOST=satvm05.researchstudio.at"
  #      - "BOTCONTEXT_MONGODB_PORT=27018"
  #      - "BOTCONTEXT_MONGODB_DATABASE=int_bot"
  #      - "MAILBOT_EMAIL_USER=won-internal"
  #      - "MAILBOT_EMAIL_ADDRESS=won-internal@researchstudio.at"
  #      - "MAILBOT_EMAIL_NAME=Web of Needs Integration-Test Mail Bot"
  #      - "MAILBOT_EMAIL_PASSWORD=$mailinglist_passwd"
  #      - "MAILBOT_EMAIL_IMAP_HOST=imap.researchstudio.at"
  #      - "MAILBOT_EMAIL_IMAP_PORT=993"
  #      - "MAILBOT_EMAIL_SMTP_HOST=smtp.researchstudio.at"
  #      - "MAILBOT_EMAIL_SMTP_PORT=587"
  #    depends_on:
  #      - mongodb
  #      - wonnode1
  #      - wonnode2

  # bigdata rdf store for matcher service (this image is not built at deployment, it is downloaded from dockerhub)
  bigdata:
    restart: always
    build: ../../image/bigdata
    volumes:
      - $base_folder/bigdata/data/:/usr/src/bigdata/data
    ports:
      - "9999:9999"

  # matcher service connect with wonnodes 1 and 2
  matcher_service:
    restart: always
    build: ../../image/matcher-service
    image: webofneeds/matcher_service:int
    environment:
      - "NODE_HOST=satvm05.researchstudio.at"
      - "MATCHER_URI=https://satvm05.researchstudio.at/matcher_service" # set this for the trust store alias
      - "CLUSTER_SEEDNODES=satvm05.researchstudio.at:2551,satvm05.researchstudio.at:2552"
      - "URI_SPARQL_ENDPOINT=http://satvm05.researchstudio.at:9999/blazegraph/namespace/kb/sparql"
      - "WONNODECONTROLLER_WONNODE_CRAWL=https://satvm05.researchstudio.at:8888/won/resource,https://satvm05.researchstudio.at/won/resource"
      - "CLUSTER_LOCAL_PORT=2551"
      - "JMEM_OPTS=-XX:+HeapDumpOnOutOfMemoryError"
      - "JMX_OPTS=-Xdebug -Xrunjdwp:transport=dt_socket,address=*:62920,server=y,suspend=n
        -Dcom.sun.management.jmxremote.port=9020 -Dcom.sun.management.jmxremote.authenticate=false
        -Dcom.sun.management.jmxremote.ssl=false -Dcom.sun.management.jmxremote.rmi.port=9020
        -Djava.rmi.server.hostname=satvm05.researchstudio.at"
    ports:
      - "2551:2551"
      - "62920:62920"
      - "9020:9020"
    volumes:
      - $base_folder/won-client-certs/matcher_service:/usr/src/matcher-service/client-certs/
    depends_on:
      - bigdata
      - wonnode1
      - wonnode2

  matcher_sparql:
    restart: always
    build: ../../image/matcher-sparql
    image: webofneeds/matcher_sparql:int
    environment:
      - "NODE_HOST=satvm05.researchstudio.at"
      - "CLUSTER_SEEDNODES=satvm05.researchstudio.at:2551,satvm05.researchstudio.at:2552"
      - "CLUSTER_LOCAL_PORT=2554"
      - "MATCHER_SPARQL_URI_SPARQL_ENDPOINT=http://satvm05.researchstudio.at:9999/blazegraph/namespace/kb/sparql"
      - "MATCHER_SPARQL_URI_PUBLIC=http://satvm05.researchstudio.at/sparql/"
      - "JMEM_OPTS=-XX:+HeapDumpOnOutOfMemoryError"
      - "JMX_OPTS=-Xdebug -Xrunjdwp:transport=dt_socket,address=*:62923,server=y,suspend=n
        -Dcom.sun.management.jmxremote.port=9023 -Dcom.sun.management.jmxremote.authenticate=false
        -Dcom.sun.management.jmxremote.ssl=false -Dcom.sun.management.jmxremote.rmi.port=9023
        -Djava.rmi.server.hostname=satvm05.researchstudio.at"
    ports:
      - "2554:2554"
      - "9023:9023"
      - "62923:62923"
    depends_on:
      - matcher_service
    volumes:
      - $base_folder/won-client-certs/matcher_sparql:/usr/src/matcher-sparql/client-certs/

  # solr server as an atom index
  solr:
    restart: always
    build: ../../image/solr
    image: webofneeds/solr:int
    volumes:
      - $base_folder/solr/won/data:/opt/solr/server/solr/won/data
      - $base_folder/solr/wontest/data:/opt/solr/server/solr/wontest/data
    ports:
      - "8983:8983"

  # solr matcher and connect to matcher service
  matcher_solr:
    restart: always
    build: ../../image/matcher-solr
    image: webofneeds/matcher_solr:int
    environment:
      - "NODE_HOST=satvm05.researchstudio.at"
      - "CLUSTER_SEEDNODES=satvm05.researchstudio.at:2551,satvm05.researchstudio.at:2552"
      - "CLUSTER_LOCAL_PORT=2552"
      - "MATCHER_SOLR_URI_SOLR_SERVER=http://satvm05.researchstudio.at:8983/solr/"
      - "MATCHER_SOLR_URI_SOLR_SERVER_PUBLIC=http://satvm05.researchstudio.at:8983/solr/"
      - "JMEM_OPTS=-XX:+HeapDumpOnOutOfMemoryError"
      - "JMX_OPTS=-Xdebug -Xrunjdwp:transport=dt_socket,address=*:62921,server=y,suspend=n
        -Dcom.sun.management.jmxremote.port=9021 -Dcom.sun.management.jmxremote.authenticate=false
        -Dcom.sun.management.jmxremote.ssl=false -Dcom.sun.management.jmxremote.rmi.port=9021
        -Djava.rmi.server.hostname=satvm05.researchstudio.at"
    ports:
      - "2552:2552"
      - "9021:9021"
      - "62921:62921"
    depends_on:
      - solr
      - matcher_service

  # rescal matcher and connect to matcher service
#  matcher_rescal:
#    restart: always
#    build: ../../image/matcher-rescal
#    image: webofneeds/matcher_rescal:int
#    environment:
#      - "NODE_HOST=satvm05.researchstudio.at"
#      - "CLUSTER_SEEDNODES=satvm05.researchstudio.at:2551,satvm05.researchstudio.at:2553"
#      - "CLUSTER_LOCAL_PORT=2553"
#      - "MATCHER_RESCAL_URI_PUBLIC=http://satvm05.researchstudio.at/rescal/"
#      - "MATCHER_RESCAL_URI_SPARQL_ENDPOINT=http://satvm05.researchstudio.at:9999/blazegraph/namespace/kb/sparql"
#      - "MATCHER_RESCAL_EXECUTIONDURATIONMINUTES=5"
#      - "MATCHER_RESCAL_THRESHOLD=0.15"
#      - "MATCHER_RESCAL_RANK=10"
#      - "JMEM_OPTS=-XX:+HeapDumpOnOutOfMemoryError"
#      - "JMX_OPTS=-Xdebug -Xrunjdwp:transport=dt_socket,address=*:62922,server=y,suspend=n
#        -Dcom.sun.management.jmxremote.port=9022 -Dcom.sun.management.jmxremote.authenticate=false
#        -Dcom.sun.management.jmxremote.ssl=false -Dcom.sun.management.jmxremote.rmi.port=9022
#        -Djava.rmi.server.hostname=satvm05.researchstudio.at"
#    ports:
#      - "2553:2553"
#      - "9022:9022"
#      - "62922:62922"
#    volumes:
#      - $base_folder/agent:/opt/agent/
#    depends_on:
#      - matcher_service
