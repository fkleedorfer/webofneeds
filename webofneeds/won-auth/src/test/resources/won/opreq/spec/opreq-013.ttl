@base            <https://example.com/test/atom1> .
@prefix ex:      <https://example.com/test/> .
@prefix auth:    <https://w3id.org/won/auth#> .
@prefix won:     <https://w3id.org/won/core#> .
@prefix chat:    <https://w3id.org/won/ext/chat#> .
@prefix wx-hold: <https://w3id.org/won/ext/hold#> .
@prefix owl:     <http://www.w3.org/2002/07/owl#> .
@prefix xsd:     <http://www.w3.org/2001/XMLSchema#> .
@prefix atom1:   <http://example.org/test/atom1#> .
@prefix atom2:   <http://example.org/test/atom2#> .
@prefix atom3:   <http://example.org/test/atom3#> .
@prefix atom4:   <http://example.org/test/atom4#> .
@prefix msg:     <https://w3id.org/won/message#> .
@prefix rdfs:    <http://www.w3.org/2000/01/rdf-schema#> .
@prefix rdfg:    <http://www.w3.org/2004/04/trix/rdfg-1/> .
@prefix rdf:     <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .

ex:expectedResult1
    a                       auth:ExpectedAclEvalResult ;
    auth:decision           auth:accessGranted ;
    auth:requestedOperation <#request1> .

ex:expectedResult2
    a                       auth:ExpectedAclEvalResult ;
    auth:decision           auth:accessDenied ;
    auth:requestedOperation <#request2> .

# Token for readHeldAtoms

<#authorization>
    a           auth:Authorization ;
    auth:bearer [ auth:tokenScope wx-hold:ScopeReadHolderAtom ;
                  auth:issuer     [ auth:socket [ auth:socketType wx-hold:HolderSocket ;
                                                  auth:connection [ auth:targetAtom      [ ] ;
                                                                    auth:connectionState won:Connected ] ] ] ] ;
    auth:grant  [ auth:graph [ auth:operation auth:opRead ] ] .

<#request1>
    a                auth:OperationRequest ;
    auth:operation   auth:opRead ;
    auth:reqAtom     ex:atom1 ;
    auth:reqPosition auth:positionAtomGraph ;
    auth:bearsToken  ex:token1 .

ex:token1
    a               auth:AuthToken ;
    auth:tokenScope wx-hold:ScopeReadHolderAtom ;
    auth:tokenIss   ex:atom2 ;
    auth:tokenSub   ex:atom3 ;
    auth:tokenSig   ex:node ;
    auth:tokenIat   "2020-12-03T22:30:00"^^xsd:dateTime ;
    auth:tokenExp   "2020-12-03T23:30:00"^^xsd:dateTime .

<#request2>
    a                auth:OperationRequest ;
    auth:operation   auth:opRead ;
    auth:reqAtom     ex:atom1 ;
    auth:reqPosition auth:positionAtomGraph ;
    auth:bearsToken  ex:token2 .

ex:token2
    a               auth:AuthToken ;
    auth:tokenScope wx-hold:ScopeReadHolderAtom  ;
    auth:tokenIss   ex:atom4 ;
    auth:tokenSub   ex:atom3 ;
    auth:tokenSig   ex:node ;
    auth:tokenIat   "2020-12-03T22:30:00"^^xsd:dateTime ;
    auth:tokenExp   "2020-12-03T23:30:00"^^xsd:dateTime .

# Persona 1

ex:atom1
    a                    won:Atom ;
    won:socket           atom1:holderSocket ;
    won:state            won:Active ;
    won:messageContainer atom1:msg ;
    won:wonNode          ex:node .


atom1:holderSocket
    a                    won:Socket ;
    won:socketDefinition wx-hold:HolderSocket ;
    won:connections      atom1:holderSocketConnections .

atom1:holderSocketConnections
    a           won:ConnectionContainer ;
    rdfs:member atom1:conn12, atom1:conn14 .

atom1:conn12
    a                   won:Connection ;
    won:socket          atom1:holderSocket ;
    won:targetAtom      ex:atom2 ;
    won:connectionState won:Connected .

atom1:conn14
    a                   won:Connection ;
    won:socket          atom1:holderSocket ;
    won:targetAtom      ex:atom4 ;
    won:connectionState won:Closed .

# Atom 2 - holdable

ex:atom2
    a                    won:Atom ;
    won:socket           atom2:holdableSocket, atom2:chatSocket ;
    won:state            won:Active ;
    won:messageContainer atom2:msg ;
    won:wonNode          ex:node .

atom2:holdableSocket
    a                    won:Socket ;
    won:socketDefinition wx-hold:HoldableSocket ;
    won:connections      atom2:holdableSocketConnections .

atom2:holdableSocketConnections
    a           won:ConnectionContainer ;
    rdfs:member atom2:conn21 .

atom2:conn21
    a                   won:Connection ;
    won:socket          atom2:holdableSocket ;
    won:targetAtom      ex:atom1 ;
    won:connectionState won:Connected .

atom2:chatSocket
    a                    won:Socket ;
    won:socketDefinition chat:ChatSocket ;
    won:connections      atom2:chatSocketConnections .

atom2:chatSocketConnections
    a           won:ConnectionContainer ;
    rdfs:member atom2:conn23 .

atom2:conn23
    a                   won:Connection ;
    won:socket          atom2:chatSocket ;
    won:targetAtom      ex:atom3 ;
    won:connectionState won:Connected .


# Atom 3 - connected with Atom 2, wants to see Atom/Persona 1

ex:atom3
    a                    won:Atom ;
    won:socket           atom3:chatSocket ;
    won:state            won:Active ;
    won:messageContainer atom3:msg ;
    won:wonNode          ex:node .

atom3:chatSocket
    a                    won:Socket ;
    won:socketDefinition chat:ChatSocket .

atom3:chatSocketConnections
    a           won:ConnectionContainer ;
    rdfs:member atom3:conn32 .

atom3:conn32
    a                   won:Connection ;
    won:socket          atom3:chatSocket ;
    won:targetAtom      ex:atom2 ;
    won:connectionState won:Connected .

ex:atom4
    a                    won:Atom ;
    won:socket           atom4:holdableSocket ;
    won:state            won:Active ;
    won:messageContainer atom4:msg ;
    won:wonNode          ex:node .

atom4:holdableSocket
    a                    won:Socket ;
    won:socketDefinition wx-hold:HoldableSocket ;
    won:connections      atom4:holdableSocketConnections .


atom4:holdableSocketConnections
    a           won:ConnectionContainer ;
    rdfs:member atom4:conn41 .

atom4:conn41
    a                   won:Connection ;
    won:socket          atom4:holdableSocket ;
    won:targetAtom      ex:atom4 ;
    won:connectionState won:Closed .
