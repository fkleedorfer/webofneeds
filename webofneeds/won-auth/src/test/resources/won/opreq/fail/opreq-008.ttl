@base         <https://example.com/test/atom1> .
@prefix ex:   <https://example.com/test/> .
@prefix auth: <https://w3id.org/won/auth#> .
@prefix won:  <https://w3id.org/won/core#> .
@prefix owl:  <http://www.w3.org/2002/07/owl#> .
@prefix atom1:   <http://example.org/test/atom1#> .
@prefix msg:  <https://w3id.org/won/message#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix rdfg: <http://www.w3.org/2004/04/trix/rdfg-1/> .
@prefix rdf:  <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .

# request read on the whole atom, exact atom state match
# granted to any connected atom
# requestor is not connected


ex:atom1
    a                    won:Atom ;
    won:socket           atom1:buddySocket ;
    won:state            won:Active ;
    won:wonNode          ex:node ;
    won:messageContainer atom1:msg .

atom1:buddySocket
    a                    won:Socket ;
    won:socketDefinition ex:BuddySocket ;
    won:connections      atom1:buddySocketConnections .

atom1:buddySocketConnections
    rdfs:member atom1:bsConn1 .

atom1:bsConn1
    a                   won:Connection ;
    won:targetAtom      ex:atom3 ;
    won:socket          atom1:buddySocket ;
    won:connectionState won:Connected .

ex:atom3
    a           won:Atom ;
    won:state   won:Active ;
    won:wonNode ex:node .

<#authorization>
    a            auth:Authorization ;
    auth:grantee [ auth:targetAtom [ ] ] ;
    auth:grant   [ auth:atomState won:Active ;
                   auth:operation auth:anyOperation ] .

<#request>
    a                      auth:OperationRequest ;
    auth:requestor         ex:atom2 ;
    auth:reqAtom           ex:atom1 ;
    auth:reqAtomState      won:Active ;
    auth:reqPosition       auth:positionRoot ;
    auth:operation         auth:opRead .