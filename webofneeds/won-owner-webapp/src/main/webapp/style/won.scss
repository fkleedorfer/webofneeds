@import "sizing-utils";
@import "text";
@import "flex-layout";
@import "reset";
@import "elevation";

body {
  --headerHeight: 3.3rem;

  //this font will be inherited down the cascade
  @include default-font;
  background-color: $won-lighter-gray;

  > section.ng-scope > section {
    display: grid;
    min-height: 100vh;

    &:not(.won-signed-out) {
      @media (max-width: $responsivenessBreakPoint) {
        grid-template-areas:
          "header"
          "info"
          "list"
          "content"
          "footer";
        grid-template-rows: min-content min-content min-content 1fr min-content;
      }

      @media (min-width: $responsivenessBreakPoint) {
        grid-template-areas:
          "header header header header header"
          "menu info info info info"
          "menu . list content ."
          "menu . . . ."
          "menu footer footer footer footer";
        grid-template-rows: min-content min-content max-content 1fr min-content;
        grid-template-columns:
          min-content 1fr minmax(min-content, $maxContentWidth/3) minmax(
            min-content,
            (($maxContentWidth/3) * 2)
          )
          1fr;
      }
    }

    &.won-signed-out {
      @media (max-width: $responsivenessBreakPoint) {
        grid-template-areas:
          "header"
          "info"
          "list"
          "content"
          "footer";
        grid-template-rows: min-content min-content min-content 1fr min-content;
      }

      @media (min-width: $responsivenessBreakPoint) {
        grid-template-areas:
          "header header header header"
          "info info info info"
          ". list content ."
          ". . . ."
          "footer footer footer footer";
        grid-template-rows: min-content min-content max-content 1fr min-content;
        grid-template-columns:
          1fr minmax(min-content, $maxContentWidth/2) minmax(
            min-content,
            $maxContentWidth/2
          )
          1fr;
      }

      > main.signup,
      > main.about {
        grid-area: list;
        @media (min-width: $responsivenessBreakPoint) {
          grid-column: 1 / -1;
        }
      }
    }

    > won-topnav {
      grid-area: header;
      position: sticky;
      box-sizing: border-box;
      height: var(--headerHeight);
      top: 0;
      z-index: 1000;
    }

    > won-toasts,
    > won-slide-in {
      grid-area: info;
    }

    > won-menu {
      grid-area: menu;
    }

    > won-menu {
      box-sizing: border-box;
      border-right: $thinGrayBorder;
      z-index: 999;
      overflow-y: auto;

      @media (min-width: $responsivenessBreakPoint) {
        @include defaultMenuElevation();
      }

      height: calc(100vh - var(--headerHeight));
      top: var(--headerHeight);

      &.won-menu--show-mobile {
        position: fixed;
        width: 80vw;
        max-width: 80vw;
        transition: max-width 0.25s linear, top 0s 0.25s linear;
        @include defaultMenuElevation();
      }

      &:not(.won-menu--show-mobile) {
        position: sticky;
        width: 22rem;
        max-width: 22rem;
        @media (max-width: $responsivenessBreakPoint) {
          position: fixed;
          height: calc(100vh - var(--headerHeight));
          width: 22rem;
          max-width: 0;
          transition: max-width linear 0.25s;
          border-right: 0;
          box-shadow: none;
        }
      }
    }

    > aside.settings__left,
    > aside.overview__left {
      grid-area: list;
      z-index: 2;
    }

    > main.overview__nochats {
      grid-area: content;
      @media (min-width: $responsivenessBreakPoint) {
        grid-column: 2 / -1;
      }

      > .overview__nochats__empty {
        box-sizing: border-box;
        position: sticky;
        top: var(--headerHeight);
        height: calc(100vh - var(--headerHeight));
      }
    }

    > main.overview__rightempty {
      grid-area: content;

      > .overview__rightempty__noselection {
        box-sizing: border-box;
        position: sticky;
        top: var(--headerHeight);
        height: calc(100vh - var(--headerHeight));
      }
    }

    > main.overview__justconnection,
    > main.settings__right,
    > main.overview__right {
      grid-area: content;

      > * {
        box-sizing: border-box;
        position: sticky;
        top: var(--headerHeight);

        border-right: $thinGrayBorder;
        border-bottom: $thinGrayBorder;
        @media (max-width: $responsivenessBreakPoint) {
          border-right: none;
        }
        background: white;
      }

      > won-settings-content,
      > won-group-atom-messages,
      > won-atom-messages {
        height: calc(100vh - var(--headerHeight));
      }
    }

    > main.overview__justconnection {
      @media (min-width: $responsivenessBreakPoint) {
        grid-column: 3 / 5;

        > * {
          border-left: $thinGrayBorder;
        }
      }
    }

    > main.signup,
    > main.about {
      grid-area: list;
      @media (min-width: $responsivenessBreakPoint) {
        grid-column: 2 / -1;
      }
    }

    > won-footer {
      grid-area: footer;
    }
  }
}

@media (max-width: $responsivenessBreakPoint) {
  aside.overview__left,
  main.ownercreate,
  main.ownermap,
  main.ownerinventory,
  main.owneroverview,
  main.ownerwelcome,
  main.atomcontent,
  aside.settings__left,
  main.about {
    grid-column: 1 / -1;
  }
}

@media (min-width: $responsivenessBreakPoint) {
  section {
    > aside.overview__left,
    > main.ownercreate,
    > main.ownermap,
    > main.ownerinventory,
    > main.owneroverview,
    > main.ownerwelcome,
    > main.atomcontent,
    > aside.settings__left,
    > main.about {
      grid-column: 2 / -1;
    }

    &.won-signed-out {
      > aside.overview__left,
      > main.ownercreate,
      > main.ownermap,
      > main.ownerinventory,
      > main.owneroverview,
      > main.ownerwelcome,
      > main.atomcontent,
      > aside.settings__left,
      > main.about {
        grid-column: 1 / -1;
      }
    }
  }
}

input[type="text"],
input[type="password"],
input[type="email"] {
  display: block;
  padding: 0.66rem;
  box-sizing: border-box;
  border-radius: 0.19rem;
  border: $thinGrayBorder;
  font-size: 16px;
}

input[type="text"],
input[type="password"],
input[type="email"],
input[type="date"],
input[type="time"],
input[type="url"],
input[type="number"],
select,
textarea {
  &:focus {
    outline-color: $won-secondary-color;
  }
}

.clickable {
  cursor: pointer;
  user-select: none;
}

.hspinner {
  @include fixed-square(2.25rem);
  --local-primary: #{$won-primary-color};
  --local-secondary: #{$won-secondary-color};
}

hr {
  border: 0;
  height: 1px;
  background: $won-line-gray;
  color: $won-line-gray;
}

a {
  //color: $won-primary-color;
  color: $won-secondary-color-lighter;
  text-decoration: none;

  &:visited {
    //color: darken($won-primary-color, 30%);
    color: $won-secondary-color-light;
  }
}

svg {
  user-select: none;
}

//TODO in topnav, make create-button black when the dialog is open
//TODO the :hover isn't usable on touch displays (require alternate path to get to the help text) - dog-ears + peel-slide?
//TODO enable keyboard selection. add aria-information

//QUICK FIX for broken elm back button
main.settings won-svg-icon {
  @include fixed-square($postIconSize);

  > svg {
    @include fixed-square($postIconSize);
  }
}

main.ownerloading {
  grid-column: 2 / -1;
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  padding: 5rem 0;

  > .ownerloading__spinner.hspinner {
    @include fixed-square(5rem);
  }

  > .ownerloading__label {
    color: $won-line-gray;
    text-align: center;
  }
}

// Current Location Marker
.wonCurrentLocationMarkerIcon > .marker {
  width: 15px;
  height: 15px;
  background-color: $won-primary-color;
  border-radius: 100%;
}
