<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <parent>
        <artifactId>won-parent-pom</artifactId>
        <relativePath>../won-parent-pom</relativePath>
        <groupId>at.researchstudio.sat</groupId>
        <version>0.10-SNAPSHOT</version>
    </parent>

    <modelVersion>4.0.0</modelVersion>
    <name>Authorization</name>
    <artifactId>won-auth</artifactId>
    <packaging>jar</packaging>
    <properties>
        <shacl2java.generate-sources.outputDir>
            ${project.basedir}/target/generated-sources/shacl2java
        </shacl2java.generate-sources.outputDir>
        <shacl2java.generate-test-sources.outputDir>
            ${project.basedir}/target/generated-test-sources/shacl2java
        </shacl2java.generate-test-sources.outputDir>
        <won.ontology.dir>${project.basedir}/../won-vocab/src/main/resources/ontology</won.ontology.dir>
        <won.ontology.copy.outputDir>${project.basedir}/target/generated-sources/ontology-copy</won.ontology.copy.outputDir>
    </properties>

    <dependencies>
        <dependency>
            <groupId>at.researchstudio.sat</groupId>
            <artifactId>won-core</artifactId>
            <version>${project.version}</version>
            <exclusions>
                <exclusion>
                    <!-- avoid version clash between the transitive
                         dependencies (httpclient and jena) -->
                    <groupId>commons-codec</groupId>
                    <artifactId>commons-codec</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>at.researchstudio.sat</groupId>
            <artifactId>won-cryptography</artifactId>
            <version>${project.version}</version>
            <exclusions>
                <exclusion>
                    <!-- avoid version clash between the transitive
                         dependencies (httpclient and jena) -->
                    <groupId>commons-codec</groupId>
                    <artifactId>commons-codec</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>at.researchstudio.sat</groupId>
            <artifactId>won-utils-shacl2java</artifactId>
            <version>${project.version}</version>
            <exclusions>
                <exclusion>
                    <!-- avoid version clash between the transitive
                         dependencies (httpclient and jena) -->
                    <groupId>commons-codec</groupId>
                    <artifactId>commons-codec</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <!-- LOGGING STUFF -->
        <!-- TEST STUFF -->
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-test</artifactId>
        </dependency>
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
        </dependency>
        <!-- RDF STUFF -->
        <dependency>
            <groupId>org.apache.jena</groupId>
            <artifactId>jena-core</artifactId>
        </dependency>
        <dependency>
            <groupId>org.apache.jena</groupId>
            <artifactId>jena-tdb</artifactId>
        </dependency>
        <dependency>
            <groupId>org.apache.jena</groupId>
            <artifactId>jena-shacl</artifactId>
        </dependency>
        <!-- SPRING STUFF -->
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-core</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-beans</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-context</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-context-support</artifactId>
        </dependency>
        <!-- JWT -->
        <dependency>
            <groupId>io.jsonwebtoken</groupId>
            <artifactId>jjwt-api</artifactId>
        </dependency>
        <dependency>
            <groupId>io.jsonwebtoken</groupId>
            <artifactId>jjwt-impl</artifactId>
            <scope>runtime</scope>
        </dependency>
        <dependency>
            <groupId>io.jsonwebtoken</groupId>
            <artifactId>jjwt-jackson</artifactId> <!-- or jjwt-gson if Gson is preferred -->
            <scope>runtime</scope>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <plugin>
                <artifactId>maven-resources-plugin</artifactId>
                <version>2.6</version>
                <executions>
                    <!-- copy auth ontology to resources folder -->
                    <execution>
                        <id>copy-auth-ontology</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>copy-resources</goal>
                        </goals>
                        <configuration>
                            <overwrite>true</overwrite>
                            <outputDirectory>${won.ontology.copy.outputDir}/shacl</outputDirectory>
                            <resources>
                                <resource>
                                    <directory>${won.ontology.dir}</directory>
                                    <includes>
                                        <include>won-auth.ttl</include>
                                    </includes>
                                </resource>
                            </resources>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>exec-maven-plugin</artifactId>
                <executions>
                    <execution>
                        <id>shacl2java-generate-auth-classes</id>
                        <!-- the phase should be 'generate-sources', and 'process-sources'
                        for the next two plugins (right?), but that does not work.-->
                        <phase>process-sources</phase>
                        <goals>
                            <goal>java</goal>
                        </goals>
                        <configuration>
                            <mainClass>won.shacl2java.Shacl2JavaSrcGenCommand</mainClass>
                            <commandlineArgs> -p won.auth.model -o ${shacl2java.generate-sources.outputDir} ${won.ontology.dir}/won-auth.ttl -vc https://w3id.org/won/auth#TreeExpressionShape</commandlineArgs>

                        </configuration>
                    </execution>
                    <execution>
                        <id>shacl2java-generate-auth-test-classes</id>
                        <!-- the phase should be 'generate-sources', and 'process-sources'
                        for the next two plugins (right?), but that does not work.-->
                        <phase>process-test-sources</phase>
                        <goals>
                            <goal>java</goal>
                        </goals>
                        <configuration>
                            <mainClass>won.shacl2java.Shacl2JavaSrcGenCommand</mainClass>
                            <commandlineArgs>-p won.auth.test.model -o ${shacl2java.generate-test-sources.outputDir} ${project.basedir}/src/main/resources/shacl/won-test-atom-shapes.ttl</commandlineArgs>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>build-helper-maven-plugin</artifactId>
                <executions>
                    <execution>
                        <id>add-sources</id>
                        <phase>generate-resources</phase>
                        <goals>
                            <goal>add-source</goal>
                        </goals>
                        <configuration>
                            <sources>
                                <source>${shacl2java.generate-sources.outputDir}</source>
                            </sources>
                        </configuration>
                    </execution>
                    <execution>
                        <id>add-resources-sources</id>
                        <phase>generate-resources</phase>
                        <goals>
                            <goal>add-resource</goal>
                        </goals>
                        <configuration>
                            <resources>
                                <resource>
                                    <directory>${won.ontology.copy.outputDir}</directory>
                                </resource>
                            </resources>
                        </configuration>
                    </execution>
                    <execution>
                        <id>add-test-sources</id>
                        <phase>generate-test-resources</phase>
                        <goals>
                            <goal>add-test-source</goal>
                        </goals>
                        <configuration>
                            <sources>
                                <source>${shacl2java.generate-test-sources.outputDir}</source>
                            </sources>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>net.revelc.code.formatter</groupId>
                <artifactId>formatter-maven-plugin</artifactId>
                <executions>
                    <execution>
                        <id>format-generated-sources</id>
                        <phase>generate-resources</phase>
                        <goals>
                            <goal>format</goal>
                        </goals>
                        <configuration>
                            <configFile>eclipse/formatter.xml</configFile>
                            <encoding>UTF-8</encoding>
                            <lineEnding>LF</lineEnding>
                            <directories>
                                <directory>${shacl2java.generate-sources.outputDir}</directory>
                            </directories>
                        </configuration>
                    </execution>
                    <execution>
                        <id>format-generated-test-sources</id>
                        <phase>generate-test-resources</phase>
                        <goals>
                            <goal>format</goal>
                        </goals>
                        <configuration>
                            <configFile>eclipse/formatter.xml</configFile>
                            <encoding>UTF-8</encoding>
                            <lineEnding>LF</lineEnding>
                            <directories>
                                <directory>${shacl2java.generate-test-sources.outputDir}</directory>
                            </directories>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

        </plugins>
    </build>

</project>